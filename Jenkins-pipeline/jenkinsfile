pipeline {
    agent any
    
    environment {
        DOCKER_CREDENTIALS_ID = 'Docker_Jenkins_crd'
        DOCKER_IMAGE_NAME = 'touhidjnu/react-app1'
        APP_DIRECTORY = '/var/www/app'
    }
    
       stages {
        stage('Pull Code') {
            steps {
                git branch: 'main', credentialsId: 'github_cred', url: 'https://github.com/touhid101/Final-Exam.git'
            }
        }
       
        stage('Display Files') {
            steps {
                sh 'ls -la'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    def buildNumber = currentBuild.number
                    def currentTime = new Date().format('dd-MM-HH-mm')
                    def imageTag = "${buildNumber}-${currentTime}"

                    // Build the Docker image
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:${imageTag} ."
                }
            }
        }
        
        stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        // Login to Docker Hub
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                        // Push the Docker image
                        sh "docker push ${DOCKER_IMAGE_NAME}:${imageTag}"
                        // Logout from Docker Hub
                        sh "docker logout"
                    }
                }
            }
        }
        
        stage('Update docker-compose.yaml') {
            steps {
                // Update the image tag in the docker-compose.yaml file
                sh "sed -i 's|${DOCKER_IMAGE_NAME}:.*|${DOCKER_IMAGE_NAME}:${imageTag}|g' ${APP_DIRECTORY}/docker-compose.yaml"
            }
        }
        
        stage('Restart Docker Containers') {
            steps {
                // Navigate to the application directory and restart containers
                dir(APP_DIRECTORY) {
                    sh "docker-compose down"
                    sh "docker-compose up -d"
                }
            }
        }
                    
        stage('Push Code to Repository') {
            steps {
                script {
                    // Commit and push changes to the repository
                    sh "git config --global user.email 'touhidjnu@gmail.com'"
                    sh "git config --global user.name 'touhid'"
                    sh "git add ${APP_DIRECTORY}/docker-compose.yaml"
                    sh "git commit -m 'Update docker-compose with new image tag'"
                    sh "git push origin main" // Adjust the branch name if needed
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
